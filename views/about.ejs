<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Room</title>
    <link rel="stylesheet" href="../css/about.css">
</head>
<body>
    <header>
        <h2>jab we talk</h2>
    </header>
    <main>
    <h1>üìù About Jab-We-Talk</h1>
     
    <div class="info">
        <b>üöÄ What is Jab-We-Talk?</b>
        <p>JabweChat is a real-time chat application built for seamless and interactive communication. Users can create chat rooms or join random chats effortlessly. With features like real-time typing indicators, message statuses, and room management, JabweChat offers a smooth chatting experience.</p>

    </div>
     
    <div class="info">
        <b>‚ö° Key Features</b>
        <p><b>Chat Rooms & Random Chat: </b><br>

            1.Users can create their own chat rooms with a name, description, and tags. <br>
            2.Explore random chat to meet new people instantly. <br><br>
            <b>Real-time Indicators:</b><br>
            
            
            1.Typing Indicator:<br> See when someone is typing.
            Message Status: Know when messages are delivered or read.<br><br>
            2.Room Management:<br>
            
            View the number of active users in each room and on the main page.
            Search for rooms by name or tags.
            Join/Leave Notifications: Get notified when users join or leave.<br><br>
            3.Optimized Database Operations:<br>
            
            Messages are temporarily stored in a hashmap and periodically saved to MongoDB to reduce frequent read/write operations.<br><br>
            4.Responsive Design:<br>
            
            Works seamlessly across devices with clean and adaptive UI.</p>
    </div>
     
    <div class="info">
        <b>üõ†Ô∏è Tech Stack</b>
        <p><b>Backend:</b> Node.js, Express.js <br>
            <b>Frontend:</b> EJS, CSS, JavaScript <br>
           <b>Database:</b>  MongoDB <br>
           <b>Real-time Communication:</b>  Socket.io <br>
            <b>Authentication:</b> JWT (JSON Web Token) <br>
            <b>Architecture:</b> MVC Pattern</p>
    </div>
     
    <div class="info">
        <b>üìä How it Works</b>
        <p>
        <b> Real-Time Chat: <br></b> Exchange messages in real-time with typing indicators and message statuses.br <br> <br>
       <b>  Create or Join Rooms: <br></b> Users can create rooms with descriptions and tags or join existing ones.br <br> <br>
       <b> Room Listings: <br></b> Popular rooms are displayed on the main page.br <br> <br>
       <b> Efficient Database Storage: <br></b> Messages are batched and saved periodically to optimize performance.br <br> <br>
        </p>
    </div>
     
    <div class="info">
        <b>üì¶ Dependencies</b>
        <p>
            <pre>"dependencies":
        {
        "cookie-parser": "^1.4.7",
        "dotenv": "^16.4.7",
        "ejs": "^3.1.10",
        "express": "^4.21.2",
        "jsonwebtoken": "^9.0.2",
        "mongoose": "^8.8.4",
        "socket.io": "^4.8.1"
              }</pre>
        </p>
    </div>
     
    <div class="info">
        <b>üåê Project Links</b>
        <p>
            GitHub Repository: [Link Here] <br><br>
            Live Demo: [Link Here]
        </p>
    </div>
     
    <div class="info">
        <b>üë§ About the Developer</b>
        <p>Hey! I‚Äôm Anshu Mohan Joshi, a backend developer passionate about creating scalable and efficient applications. JabweChat was an exciting challenge that allowed me to implement real-time communication, optimize database operations, and follow the MVC architecture.

          <br> <b>Let‚Äôs connect:</b>  <br>
            
            GitHub <br>
            Portfolio</p>
    </div>
     
   
    </main>
</body>
</html>